# = Configuration of OpenSSH daemon
# Tim Friske <me@tifr.de>
#
# Configures _OpenSSH's_ _Secure SHell_ daemon program.  The _OpenSSH_
# daemon is used in combination with a _SSH_ compatible client to
# establish a secure connection between two untrusted hosts over an
# insecure network.
#
# Empty lines are ignored but may be used to divide the content of this
# configuration file into logical blocks.  Lines whose first
# non-whitespace character is the `#` hash sign are ignored but may be
# used as comments.
#
# The _OpenSSH_ daemon obtains its configuration from the below sources
# in the following order:
#
#   . Command line options.
#
#   . System configuration file (`/etc/ssh/sshd_config`).
#
# The configuration file is divided into sections.  Each section starts
# with a `Match` expression that ends at the next section or global
# section at the end of file.  A section defines the settings specific
# to that one.
#
# For each setting only the one of the first matching section in the
# direction from top to bottom is applied.  Therefore more specific
# sections must be defined before less specific ones for their settings
# to become effective.
#
# Fallback settings may be defined in either the global section without
# `Match` expression or `Match all`.  Such a setting becomes effective
# if no setting was found in a more specific section.  The global
# section must be defined at the end of this file.
#
# Important note: With regards to security sensitive settings this
# configuration file mainly follows the advices given by the
# https://infosec.mozilla.org/guidelines/openssh[Mozilla Security
# Guidelines for OpenSSH].  For details on choosing safe curves for
# elliptic-curve cryptography see https://safecurves.cr.yp.to[Safe
# Curves].

# Allow only the safest key exchange algorithms to be used in the order
# from safest to less safe but still acceptable.  Leave out any weak or
# untrusted algorithms.
#
# Run `ssh -Q kex` to list the currently supported key exchange
# algorithms.
#
# Default: KexAlgorithms \
#   curve25519-sha256,\
#   curve25519-sha256@libssh.org,\
#   ecdh-sha2-nistp256,\
#   ecdh-sha2-nistp384,\
#   ecdh-sha2-nistp521,\
#   diffie-hellman-group-exchange-sha256,\
#   diffie-hellman-group16-sha512,\
#   diffie-hellman-group18-sha512,\
#   diffie-hellman-group14-sha256,\
#   diffie-hellman-group14-sha1
#
KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256

# Allow only the safest host key algorithms to be used in the order from
# safest to less safe but still acceptable.  Leave out any weak or
# untrusted algorithms.
#
# Run `ssh -Q key` to list the currently supported host key algorithms.
#
# Default: HostKeyAlgorithms \
#   ecdsa-sha2-nistp256-cert-v01@openssh.com,\
#   ecdsa-sha2-nistp384-cert-v01@openssh.com,\
#   ecdsa-sha2-nistp521-cert-v01@openssh.com,\
#   ssh-ed25519-cert-v01@openssh.com,\
#   ssh-rsa-cert-v01@openssh.com,\
#   ecdsa-sha2-nistp256,\
#   ecdsa-sha2-nistp384,\
#   ecdsa-sha2-nistp521,\
#   ssh-ed25519,\
#   ssh-rsa
#
HostKeyAlgorithms ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,ssh-rsa

# Allow only the safest cipher algorithms to be used in the order from
# safest to less safe but still acceptable.  Leave out any weak or
# untrusted algorithms.
#
# Run `ssh -Q cipher` to list the currently supported cipher algorithms.
#
# Default: Ciphers \
#   chacha20-poly1305@openssh.com,\
#   aes128-ctr,\
#   aes192-ctr,\
#   aes256-ctr,\
#   aes128-gcm@openssh.com,\
#   aes256-gcm@openssh.com,\
#   aes128-cbc,\
#   aes192-cbc,\
#   aes256-cbc
#
Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr

# Allow only the safest _MAC_ _Message Authentication Code_ algorithms
# to be used in the order from safest to less safe but still acceptable.
# Leave out any weak or untrusted algorithms.
#
# Run `ssh -Q mac` to list the currently supported _MAC_ algorithms.
#
# Default: MACs \
#  umac-64-etm@openssh.com,\
#  umac-128-etm@openssh.com,\
#  hmac-sha2-256-etm@openssh.com,\
#  hmac-sha2-512-etm@openssh.com,\
#  hmac-sha1-etm@openssh.com,\
#  umac-64@openssh.com,\
#  umac-128@openssh.com,\
#  hmac-sha2-256,\
#  hmac-sha2-512,\
#  hmac-sha1
#
MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com

# Allow only the safest authentication methods that must be successfully
# completed for a user to be granted access in the order from safest to
# less safe but still acceptable.  Leave out any weak or untrusted
# methods.
#
# This option must be followed by one or more comma-separated lists of
# authentication method names, or by the single string `any` to indicate
# the default behavior of accepting any single authentication method.
#
# The available authentication methods are: `gssapi-with-mic`,
# `hostbased`, `keyboard-interactive`, `none`, `password`, `publickey`.
#
# Default: AuthenticationMethods any
#
AuthenticationMethods publickey

# Allow only the private key files with the safest public key algorithms
# to be used in the order from safest to less safe but still acceptable.
# Leave out any weak or untrusted algorithms.
#
# Default:
#   HostKey /etc/ssh/ssh_host_ecdsa_key
#   HostKey /etc/ssh/ssh_host_ed25519_key
#   HostKey /etc/ssh/ssh_host_rsa_key
#
HostKey /etc/ssh/ssh_host_ed25519_key
HostKey /etc/ssh/ssh_host_rsa_key
