# Startup file for Bash login shells
# ==================================
# Tim Friske <me@tifr.de>
#
# The _Bash_ _Bourne Again Shell_ reads and executes commands from its
# configuration files but only if these exist and are readable.  When
# started as a login shell it first reads its system-wide startup file
# `/etc/profile`.  It then continues to read the first of its user-
# specific startup files `~/.bash_profile`, `~/bash_login` and
# `~/.profile` it encounters in that order.  When a login shell is
# exited _Bash_ reads and executes commands from its user-specific
# shutdown file `~/.bash_logout`.
#
# This configuration file shall contain only non-default settings
# specific to login shells in order to keep it lean and thus easy to
# understand and maintain.  In case an interactive login shell is
# started this startup file shall read and execute the commands from
# _Bash's_ user-specific startup file for interactive shells, namely
# `~/.bashrc`.
#
# See also:
#   * man:bash[1]
#   * link:{system-home}/profile
#   * link:{user-home}/.bash_profile
#   * link:{user-home}/.bash_login
#   * link:{user-home}/.bash_logout
#   * link:{user-home}/.bashrc

# Environment setup
# -----------------

# Set up the `PATH` environment variable.
#
source ~/.bash/login.d/path.bash

# Set up the environments of various programs.
#
for script in $(shopt -s globstar; \
    printf '%s\n' ~/.bash/login.d/drop-in/**/*.bash); do
  source "$script"
done
unset script

# Copy - Copy files & directories
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# interactive::
#   Let _Cp_ prompt before overwriting.
#
# verbose::
#   Let _Cp_ report what it is doing.

# Define default options for `cp` command.
export CP_X_OPTIONS=''
CP_X_OPTIONS+='--interactive '
CP_X_OPTIONS+='--verbose '

# Ch(grp|mod|own) - Change file group, mode, owner
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# preserve-root::
#   Never start from the root directory because this would almost always
#   mean to *destroy* the *entire* root file system and *all* file
#   systems mounted below.
#
# changes::
#   Report only which files and directories actually changed.

# Define default options for `chgrp` command.
export CHGRP_X_OPTIONS=''
CHGRP_X_OPTIONS+='--preserve-root '
CHGRP_X_OPTIONS+='--changes '

# Define default options for `chmod` command.
export CHMOD_X_OPTIONS=''
CHMOD_X_OPTIONS+='--preserve-root '
CHMOD_X_OPTIONS+='--changes '

# Define default options for `chown` command.
export CHOWN_X_OPTIONS=''
CHOWN_X_OPTIONS+='--preserve-root '
CHOWN_X_OPTIONS+='--changes '

# D(f|u) - Disk free, usage
# ~~~~~~~~~~~~~~~~~~~~~~~~~
#
# si::
#   Show human-readable file system sizes in powers of 1,000.

# Define default options for `df` command.
export DF_X_OPTIONS=''
DF_X_OPTIONS+='--si '

# Define default options for `du` command.
export DU_X_OPTIONS=''
DU_X_OPTIONS+='--si '

# Diff - Differences between files & directories
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#  unified::
#    output NUMBER (3) lines above and below a diff hunk in the
#    `unified' diff format.  This format is more readable than _Diff's_
#    default `normal' format.  The `unified' format is also the default
#    format used by _Git_.
#
#  ignore-tab-expansion::
#  ignore-space-change::
#  ignore-trailing-space::
#  ignore-blank-lines::
#  ignore-all-space::
#    Don't get distracted from any kind of changes in whitespace.
#    Whitespace usually doesn't change the meaning of the content of a
#    file for most file formats.
#
#  color=auto::
#    If _Diff_ output is to a terminal colorize it.

# Define default options for `diff` command.
export DIFF_X_OPTIONS=''
DIFF_X_OPTIONS+='--unified '
DIFF_X_OPTIONS+='--ignore-tab-expansion '
DIFF_X_OPTIONS+='--ignore-space-change '
DIFF_X_OPTIONS+='--ignore-trailing-space '
DIFF_X_OPTIONS+='--ignore-blank-lines '
DIFF_X_OPTIONS+='--ignore-all-space '
DIFF_X_OPTIONS+='--color=auto '

# Free - Free main memory and swap space
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# human::
#   show sizes in next largest units.
# si::
#   show sizes in powers of 1,000 instead of e.g. 1,204.

# Define default options for `free` command.
export FREE_X_OPTIONS=''
FREE_X_OPTIONS+='--human '
FREE_X_OPTIONS+='--si '

# Fzf - Fuzzy-search and select all kinds of items
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# multi::
#   allow selecting multiple items
# exit-0::
#   exit immediately if none of the items matches

# 1. Allow user to select multiple _Git_ branches with _Fzf_.
# 2. Exit immediately if there is no matching _Git_ branch.
export FZF_GIT_BRANCH_FZF_OPTS='--multi --exit-0'

# 1. Allow user to select multiple _Git_ tags with _Fzf_.
# 2. Exit immediately if there is no matching _Git_ tag.
export FZF_GIT_TAG_FZF_OPTS='--multi --exit-0'

# 1. Allow user to select multiple jobs with _Fzf_.
# 2. Exit immediately if there is no matching job.
export FZF_JOBS_FZF_OPTS='--multi --exit-0'

# Grep - Search files for content
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
#   directories=recurse::
#     If given no files search all files in the current directory and
#     below in a recursive manner.  Otherwise _Grep_ would read from
#     standard input or if given a directory tell the user that it is
#     one.  _Grep's_ default behavior is simply not what users most
#     likely expect it to be.
#
#   binary-file=without-match::
#     If _Grep_ encounters binary files just ignore them.
#
#   devices=skip::
#     If _Grep_ encounters devices just ignore them.
#
#   color=auto::
#     If _Grep_ output is to a terminal colorize it.
#
export GREP_X_OPTIONS=''
GREP_X_OPTIONS+='--directories=recurse '
GREP_X_OPTIONS+='--binary-files=without-match '
GREP_X_OPTIONS+='--devices=skip '
GREP_X_OPTIONS+='--color=auto '

# Ln - Create hard and soft links to files and folders
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# interactive::
#   Let _Ln_ prompt before overwriting.
# verbose::
#   Let _Ln_ report what it is doing.
#
export LN_X_OPTIONS=''
LN_X_OPTIONS+='--interactive '
LN_X_OPTIONS+='--verbose '

# Mkdir - Create folders
# ~~~~~~~~~~~~~~~~~~~~~~
#
# parents::
#   Let _Mkdir_ create all folders, i.e. also the intermediate ones.
#
# verbose::
#   Let _Mkdir_ report what it is doing.
#
export MKDIR_X_OPTIONS=''
MKDIR_X_OPTIONS+='--parents '
MKDIR_X_OPTIONS+='--verbose '

# Mv - Move/rename files and folders
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#
# interactive::
#   Let _Mv_ prompt before overwriting.
#
# verbose::
#   Let _Mv_ report what it is doing.
#
export MV_X_OPTIONS=''
MV_X_OPTIONS+='--interactive '
MV_X_OPTIONS+='--verbose '

# Test if login shell has startup file with local overrides.
if [[ -f ~/.bash_login.local && -r ~/.bash_login.local ]]; then
  # Read and execute commands from that startup file.
  source ~/.bash_login.local
fi

# Interactive login shells
# ------------------------

# Test if interactive shell and its startup file is readable.
if [[ "$-" == *i* && -f ~/.bashrc && -r ~/.bashrc ]]; then
  # Read and execute commands from its startup file.
  source ~/.bashrc
fi
