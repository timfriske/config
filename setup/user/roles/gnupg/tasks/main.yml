---
# Main Ansible playbook of user specific GnuPG setup
# ==================================================
# Tim Friske <me@tifr.de>

- name: Make target directories
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ bin_dir }}"
    - "{{ gnupg_dir }}"

- name: Copy GnuPG Dirmngr configuration file
  copy:
    src: dirmngr.conf
    dest: "{{ gnupg_dir }}/dirmngr.conf"

- name: Copy GnuPG GPG Agent configuration file
  copy:
    src: gpg-agent.conf
    dest: "{{ gnupg_dir }}/gpg-agent.conf"

- name: Copy GnuPG GPG configuration file
  copy:
    src: gpg.conf
    dest: "{{ gnupg_dir }}/gpg.conf"

- name: Copy GnuPG backup utility program
  copy:
    src: gpg-backup
    dest: "{{ bin_dir }}/gpg-backup"
    mode: a+x

- name: Copy GnuPG user key generation utility program
  copy:
    src: gpg-gen-key-for-user
    dest: "{{ bin_dir }}/gpg-gen-key-for-user"
    mode: a+x

- name: Start GnuPG's Dirmngr on-demand
  systemd:
    unit: dirmngr.socket
    scope: user
    enabled: yes
    state: started

- name: Start GnuPG's Gpg-agent on-demand
  systemd:
    unit: gpg-agent.socket
    scope: user
    enabled: yes
    state: started

- name: Start GnuPG's Gpg-agent with browser support daemon on-demand
  systemd:
    unit: gpg-agent-browser.socket
    scope: user
    enabled: yes
    state: started

- name: Start GnuPG's Gpg-agent with extra support daemon on-demand
  systemd:
    unit: gpg-agent-extra.socket
    scope: user
    enabled: yes
    state: started

- name: Start GnuPG's Gpg-agent with SSH support on-demand
  systemd:
    unit: gpg-agent-ssh.socket
    scope: user
    enabled: yes
    state: started
