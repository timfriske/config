#!/usr/bin/env bash
#
# Manage jobs with fuzzy finder
# =============================
# Tim Friske <me@tifr.de>
#
# List, background and foreground jobs.
#
# See also:
#   * man:bash[1]
#   * man:fzf[1]
#   * man:cat[1]

shopt -os nounset pipefail errexit errtrace
shopt -s extglob globstar

function print_help {
  1>&2 cat \
<<'HELP'
usage:

  function jb {
    eval "$(jobs | cmd='bg' fzf-jobs "$@")"
  }

  function jf {
    eval "$(jobs | cmd='fg' fzf-jobs "$@")"
  }

  function jj {
    eval "$(jobs | cmd='jobs' fzf-jobs "$@")"
  }
HELP
}

function print_job_cmd_line {
  [[ "$#" -eq 0 ]] && return
  printf '%s ' "${cmd:-${0##*/fzf-}}" "$@"
  printf '\n'
}

function fzf_jobs {
  if [[ -t 0 ]]; then
    print_help
    exit
  elif [[ "$#" -gt 0 ]]; then
    print_job_cmd_line "$@"
    exit
  fi

  local fzf_options=()
  fzf_options+=(${FZF_DEFAULT_OPTS:-})
  fzf_options+=(${FZF_JOBS_FZF_OPTS:-})
  fzf_options+=('--print0')

  local job='' jobspecs=()
  while read -r -d '' job; do
    if [[ "$job" =~ ^\[([[:digit:]]+)\] ]]; then
      jobspecs+=("%${BASH_REMATCH[1]}")
    fi
  done < <(fzf "${fzf_options[@]}")

  if [[ "${#jobspecs[@]}" -gt 0 ]]; then
    print_job_cmd_line "${jobspecs[@]}"
  fi
}

fzf_jobs "$@"
