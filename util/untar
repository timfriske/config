#!/usr/bin/env bash

# TAR Tape Archive extraction
# ===========================
# Tim Friske <me@tifr.de>
#
# Simple tape archive (TAR) extraction utility program which optionally
# decompresses a given archive file before extracting its contents into
# a folder with the same name as the base name of the given archive
# file.  In case the folder already exists the archive contents are
# extracted into this folder and possibly overwrite entries of that
# folder.  Otherwise that folder is automatically created.
#
# Note: This utility program extracts TAR files in a `safe' manner, i.e.
# it does not blindly extract all members of the archive but only the
# file or folder with the same name as the base name of the given
# archive file.  By doing so the risk of overwriting the entire contents
# of the current working directory is eliminated.
#
# Decompression relies upon _GNU Tar's_ automatic de/compression
# feature.  It hereby relies on the extension of the given archive file
# to determine with which program to decompress that archive file.

shopt -os nounset pipefail errexit errtrace

declare -r prog_name="${0##*/}"

function errmsg {
  echo >&2 "$@"
}

function untar {
  if [[ "$#" -eq 0 ]]; then
    errmsg "usage: $prog_name <file> [<folder>]"
    exit 1
  fi
  local file_path="${1:-}"
  if [[ -z "$file_path" || ! -f "$file_path" ]]; then
    errmsg 'First argument must be file path!'
    exit 1
  fi
  local folder_path="${2:-}"
  if [[ -n "$folder_path" && ! -d "$folder_path" ]]; then
    errmsg 'Second argument must be folder path!'
    exit 1
  fi

  echo '# Extracting files ...'
  echo '# ===================='
  if [[ -n "$folder_path" ]]; then
    tar \
      --extract \
      --file="$file_path" \
      --directory="$folder_path" \
      --verbose \
      || true
  else
    tar \
      --extract \
      --file="$file_path" \
      --verbose \
      -- \
      ${file_path%.tar*} \
      || true
  fi
  local message="... files extracted from $file_path"
  local msg_sep="$(eval printf '=%.0s' {1..${#message}})"
  echo "# $msg_sep"
  echo "# $message"
}

untar "$@"
