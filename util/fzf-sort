#!/usr/bin/env bash
#
# Sort records w/ Sort for Fzf
# ============================
# Tim Friske <me@tifr.de>
#
# Dependencies::
#   _Bash_, _Cat_, _Sort_

shopt -os nounset pipefail errexit errtrace

function print_help {
  1>&2 cat \
<<'HELP'
Help
====
Sort records with _Sort_ for _Fzf_.

Usage
-----
.Command line syntax
----
fzf-sort [--help]

[<variable>=<value>]... fzf-sort

[order=month|numeric[-general|-human]|random|version] fzf-sort

[reversed=1|true] fzf-sort
----

Options
-------
--help::
  Print this program's help text.

order=month|numeric[-general|-human]|random|version::
  Sort records by the given order.

reversed=1|true::
  Sort records in reverse order.

The _Fzf-sort_ program reads records from the standard input stream,
sorts them either alphabetically or ascendingly in the given order and
writes them to the standard output stream in that sort order.  With
_Fzf-sort's_ `reversed` variable set to either `1` or `true` the records
are sorted in reverse order.

When _Fzf-sort's_ standard input stream is connected to a terminal it
expects each record to appear on a new line.  Otherwise, e.g. when
_Fzf-sort_ reads from a file or another program, it assumes each record
to be terminated with a `\0` null character.

When _Fzf-sort's_ standard output stream is connected to a terminal it
writes each record on a new line.  Otherwise, e.g. when _Fzf-sort_
writes to a file or another program, it terminates each record with a
`\0` null character.
HELP
}

function sort_records {
  local opt_sort=()
  case "${order:-}" in
    month) opt_sort=('--sort' 'month');;
    numeric) opt_sort=('--sort' 'numeric');;
    numeric-general) opt_sort=('--sort' 'general-numeric');;
    numeric-human) opt_sort=('--sort' 'human-numeric');;
    random) opt_sort=('--sort' 'random');;
    version) opt_sort=('--sort' 'version');;
    *);;
  esac

  local opt_reverse=()
  if [[ "${reversed:-}" =~ 1|true ]]; then
    opt_reverse=('--reverse')
  fi

  local opt_null_term=()
  if [[ ! -t 0 && ! -t 1 ]]; then
    opt_null_term=('--zero-terminated')
  fi

  sort "${opt_sort[@]}" "${opt_reverse[@]}" "${opt_null_term[@]}"
}

function fzf_sort {
  if [[ "${1:-}" == '--help' ]]; then
    print_help
    exit
  fi

  sort_records
}

fzf_sort "$@"
