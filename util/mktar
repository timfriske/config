#!/usr/bin/env bash

# TAR Tape Archive creation
# =========================
# Tim Friske <me@tifr.de>
#
# Simple tape archive (TAR) creation utility which archives and
# optionally compresses a given folder by creating an archive file with
# the folder contents, folder name as base name and the appropriate file
# extension.
#
# Depending under which name this program is invoked it either creates
# an uncompressed TAR archive or one with different compression
# algorithms.  To achieve that this program must be installed as `mktar`
# together with the symbolic links `mktbz`, `mktgz`, `mktxz`, `mktzst`
# pointing at it.  Thereby each of the symbolic links represents the
# different compression algorithms with which to compress the resulting
# TAR file.
#
# See also:
#   * man:bash[1]
#   * man:tar[1]
#   * man:bzip2[1]
#   * man:gzip[1]
#   * man:xz[1]
#   * man:zstd[1]

shopt -os nounset pipefail errexit errtrace

declare -r prog_name="${0##*/}"

function errmsg {
  echo >&2 "$@"
}

function mktar {
  if [[ "$#" != 1 || ! -e "$1" ]]; then
    errmsg 'usage: mktar <file>|<folder>'
    errmsg 'usage: mktbz <file>|<folder>'
    errmsg 'usage: mktgz <file>|<folder>'
    errmsg 'usage: mktxz <file>|<folder>'
    errmsg 'usage: mktzst <file>|<folder>'
    exit 1
  fi
  local archive="${1%/}"
  echo '# Archiving files ...'
  echo '# ==================='
  case "$prog_name" in
    mktar)
      archive+=".tar"
      tar --create --file="$archive" --verbose -- "$1"
      ;;
    mktbz)
      archive+=".tar.bz2"
      tar --create --bzip2 --file="$archive" --verbose -- "$1"
      ;;
    mktgz)
      archive+=".tar.gz"
      tar --create --gzip --file="$archive" --verbose -- "$1"
      ;;
    mktxz)
      archive+=".tar.xz"
      tar --create --xz --file="$archive" --verbose -- "$1"
      ;;
    mktzst)
      archive+=".tar.zst"
      tar --create --zstd --file="$archive" --verbose -- "$1"
      ;;
    *)
      errmsg 'error: must be one of mktar, mktbz, mktgz, mktxz, mktzst!'
      exit 2
      ;;
  esac
  local message="... files archived in $archive"
  local msg_sep="$(eval printf '=%.0s' {1..${#message}})"
  echo "# $msg_sep"
  echo "# $message"
}

mktar "$@"
