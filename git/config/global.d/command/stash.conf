# = Git Stash's global configuration
# Tim Friske <me@tifr.de>
#
# Configures the `git-stash` command of _Git_.
#
# _Git_ is a _DVCS_ _Distributed Version Control System_ which manages
# snapshots of a file system tree once the tree's nodes are put under
# _Git's_ control.
#
# It is recommended to copy this file into the folder `global.d/command`
# underneath _Git's_ configuration folder `$XDG_CONFIG_HOME/git`, give
# it the name `stash.conf` and include it in _Git's_ global
# configuration file `$XDG_CONFIG_HOME/git/config` (symbolic link to
# `global.conf`).
#
# See also:
#   * man:git-stash[1]
#   * man:git-config[1]

# Note:
#
#   * When defining aliases all command options must be specified in
#     their long form such that users can understand them even after a
#     long time.
#
#   * Only define aliases for the most common use cases and in this
#     context also only with the most frequently used command options.
#
#   * Use _Git_ _Stash's_ commands _Apply_ or _Branch_ followed by
#     _Drop_ in favor of _Pop_ because chances are that the latter
#     cannot drop the stash because of conflicts.  This two-tiered
#     approach is similar to the command sequences `git-add` and
#     `git-commit` or `git-fetch` and `git-rebase`.
#
#   * Favor _Git_ _Stash's_ command _Push_ over _Save_ because _Push_
#     offers more options and has the opposite meaning of _Pop_
#     (antonym).
#
#   * Only care about tracked files with uncommitted changes.  Untracked
#     and ignored files should be saved from irreversible loss via a
#     backup program but not via _Git_ _Stash_ invoked with either
#     options `include-untracked` or `all`.
#
[alias]

  s = stash
