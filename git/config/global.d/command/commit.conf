# = Git Commit's global configuration
# Tim Friske <me@tifr.de>
#
# Configures the `git-commit` command of _Git_.
#
# _Git_ is a _DVCS_ _Distributed Version Control System_ which manages
# snapshots of a file system tree once the tree's nodes are put under
# _Git's_ control.
#
# It is recommended to copy this file into the folder `global.d/command`
# underneath _Git's_ configuration folder `$XDG_CONFIG_HOME/git`, give
# it the name `commit.conf` and include it in _Git's_ global
# configuration file `$XDG_CONFIG_HOME/git/config` (symbolic link to
# `global.conf`).
#
# See also:
#   * man:git-commit[1]
#   * man:git-config[1]

# Note:
#
#   * When defining aliases all command options must be specified in
#     their long form such that users can understand them even after a
#     long time.
#
#   * Only define aliases for the most common use cases and in this
#     context also only with the most frequently used command options.
#
#   * Use _Git's_ _Add_ command to incrementally add changes from the
#     working tree to the index before committing all staged changes.
#
#   * Use _Git's_ _Reset_ command to incrementally remove changes from
#     the index but not the working tree before committing all staged
#     changes.
#
#   * Use _Git's_ _Rm_ command to incrementally remove files from the
#     working tree and index before committing all staged changes.
#
#   * Don't directly or interactively commit unstaged changes.  Use
#     _Git's_ commands _Add_, _Reset_ and _Rm_ to stage or unstage
#     changes before commiting these.  This rules out the use of _Git_
#     _Commit's_ options `all`, `interactive` and `path` respectively
#     and hereby also its options `include` and `only` as well as any
#     path arguments.
